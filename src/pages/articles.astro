---
import { getCollection } from 'astro:content'
import Layout from '@layouts/Layout.astro'
import { getTagNamesByEntries } from '@helpers/tagHelper'
import TagFilters from '@components/TagFilters'

// Get all articles and authors
const articles = await getCollection('articles', ({ data }) => !data.draft)
const authors = await getCollection('authors')

// Get all tags
const tagEntries = await getCollection('tags')
const tagMap = new Map(tagEntries.map((tag) => [tag.id, tag.data]))

// Combine articles with authors
const articlesWithAuthors = articles
  .map((article) => {
    const author = authors.find(
      (author) => author.id === article.data.author.id
    )
    return {
      ...article,
      author: author?.data || null,
    }
  })
  .sort((a, b) => b.data.date.getTime() - a.data.date.getTime())

// Get tags for each article
const tagNamesByArticles = await getTagNamesByEntries(articles)

// Get all unique tags for filters
function getUniqueTags() {
  const tagIds = new Set<string>()
  const uniqueTags: Array<{ id: string; name: string }> = []

  articles.forEach((article) => {
    article.data.tags.forEach((tag) => {
      if (!tagIds.has(tag.id)) {
        tagIds.add(tag.id)
        const tagData = tagMap.get(tag.id)
        uniqueTags.push({
          id: tag.id,
          name: tagData?.name || tag.id,
        })
      }
    })
  })

  return uniqueTags.sort((a, b) => a.name.localeCompare(b.name))
}

const allTags = getUniqueTags()
---

<Layout title='Blog | Share IT' showBackButton>
  <div class='flex flex-col items-center mb-8 gap-2'>
    <h1 class='text-4xl font-bold text-center text-white'>Blog</h1>
    <span class='text-lg text-center text-gray-400'>
      Conocimiento compartido por la comunidad de Share IT.üìÉüë®üèª‚Äçüíª
    </span>
  </div>

  <div class='mb-8'>
    <TagFilters client:load tags={allTags} />
  </div>

  <div id='content-grid'>
    <div class='mb-12'>
      <div
        class='grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6'
        id='articles-grid'
      >
        {
          articlesWithAuthors.length === 0 ? (
            <div class='text-center py-8 col-span-full'>
              <p class='text-gray-400 text-lg'>
                Aun no hay art√≠culos publicados. ¬°Vuelve pronto!üöÄ
              </p>
            </div>
          ) : (
            articlesWithAuthors.map((article) => (
              <div
                class='content-item article-item'
                data-tags={article.data.tags.map((tag) => tag.id).join(' ')}
                data-type='article'
              >
                <div class='card-share-it relative block p-6 border rounded-lg border-[#368beb] hover:border-[#83D6E7] bg-gradient-to-br transition-all duration-300 from-[#1a1f2e] via-[#1e2332] to-[#2a2f3e] hover:from-[#1e2332] hover:via-[#2a2f3e] hover:to-[#314aa9]/20'>
                  <div class='flex flex-col justify-between h-[280px]'>
                    <div class='flex flex-col gap-3'>
                      {article.author && (
                        <div class='flex items-center gap-3 mb-3'>
                          <img
                            src={article.author.avatar}
                            alt={`Avatar de ${article.author.name}`}
                            class='w-10 h-10 rounded-full object-cover border-2 border-[#368beb]'
                          />
                          <div class='flex flex-col'>
                            <p class='text-sm font-semibold text-white'>
                              {article.author.name}
                            </p>
                            <p class='text-xs text-gray-400'>
                              {article.author.role}
                            </p>
                          </div>
                        </div>
                      )}

                      <div class='flex flex-col gap-2'>
                        <h3 class='card-title text-lg font-bold text-primary line-clamp-2'>
                          {article.data.title}
                        </h3>
                        <p class='text-gray-300 text-sm text-ellipsis overflow-hidden line-clamp-3'>
                          {article.data.description}
                        </p>
                      </div>
                    </div>

                    <div class='flex flex-col items-start gap-2 text-xs mt-auto'>
                      <p class='text-gray-400'>
                        {new Date(article.data.date).toLocaleDateString(
                          'es-ES',
                          { year: 'numeric', month: 'long', day: 'numeric' }
                        )}
                      </p>
                      <div class='flex gap-2 flex-wrap'>
                        {tagNamesByArticles
                          .get(article.id)
                          ?.map((tag) => (
                            <span class='bg-[#314aa9] text-violet-200 px-2 py-1 rounded text-xs'>
                              {tag}
                            </span>
                          )) || []}
                      </div>
                    </div>
                  </div>

                  <a
                    href={`/articles/${article.id}`}
                    class='absolute inset-0 z-10'
                    aria-label={`Leer art√≠culo: ${article.data.title}`}
                  />
                </div>
              </div>
            ))
          )
        }
      </div>
    </div>
  </div>

  <div class='text-center mt-8'>
    <a
      href='/resources'
      class='text-primary hover:text-secondary transition-colors'
      aria-label='Ver todos los recursos'
    >
      ¬øQuieres ver recursos adicionales? ¬°Hazlo aqu√≠! ‚Üí
    </a>
  </div>
</Layout>

<style>
  .line-clamp-2 {
    display: -webkit-box;
    -webkit-line-clamp: 2;
    -webkit-box-orient: vertical;
    overflow: hidden;
  }

  .line-clamp-3 {
    display: -webkit-box;
    -webkit-line-clamp: 3;
    -webkit-box-orient: vertical;
    overflow: hidden;
  }
</style>

